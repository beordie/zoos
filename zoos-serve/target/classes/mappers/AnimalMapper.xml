<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beordie.mapper.AnimalMapper">
    <resultMap id="baseMap" type="com.beordie.model.entity.Animal">
        <id column="id" property="id"/>
        <result column="class_species" property="classSpecies"/>
        <result column="subclass" property="subclass"/>
        <result column="orders" property="orders"/>
        <result column="family" property="family"/>
        <result column="genus" property="genus"/>
    </resultMap>

    <select id="getClassSpecies" resultType="java.lang.String">
        select distinct(class_species)
        from animal
    </select>

    <select id="getKindClassSpecies" resultMap="baseMap">
        select class_species, min(id) as id
        from animal
        group by class_species
        limit #{offset}, #{limit}
    </select>

    <select id="getCountClassSpecies" resultType="long">
        select count(*) from (
             select class_species, min(id)
             from animal
             group by class_species
        ) as b
    </select>

    <select id="getSubclass" parameterType="string" resultType="java.lang.String">
        select distinct(subclass)
        from animal
        where
            class_species = #{classSpecies}
        and
            subclass is not null
    </select>

    <select id="getKindSubclass" resultMap="baseMap">
        select class_species, subclass, min(id) as id
        from animal
        where subclass is not null
        <if test="animal.classSpecies != null">
            and class_species = #{animal.classSpecies}
        </if>
        GROUP BY class_species, subclass
        limit #{offset}, #{limit}
    </select>

    <select id="getCountSubclass" resultType="long">
        select count(*) from (
            select class_species, subclass, min(id) as id
            from animal
            where subclass is not null
            <if test="animal.classSpecies != null">
                and class_species = #{animal.classSpecies}
            </if>
            GROUP BY class_species, subclass
        ) as b
    </select>

    <select id="getOrder" parameterType="string" resultType="java.lang.String">
        select distinct(orders)
        from animal
        where
            subclass = #{subclass}
        and
            orders is not null
    </select>

    <select id="getKindOrder" parameterType="com.beordie.model.request.AnimalKind" resultMap="baseMap">
        select class_species, subclass, orders, min(id) as id
        from animal
        where
            orders is not null
        <if test="animal.classSpecies != null">
            and class_species = #{animal.classSpecies}
        </if>
        <if test="animal.subclass != null">
            and subclass = #{animal.subclass}
        </if>
        GROUP BY class_species, subclass, orders
        limit #{offset}, #{limit}
    </select>

    <select id="getCountOrder" parameterType="com.beordie.model.request.AnimalKind" resultType="long">
        select count(*) from (
            select class_species, subclass, orders, min(id) as id
            from animal
            where
            orders is not null
            <if test="animal.classSpecies != null">
                and class_species = #{animal.classSpecies}
            </if>
            <if test="animal.subclass != null">
                and subclass = #{animal.subclass}
            </if>
            GROUP BY class_species, subclass, orders
        ) as b
    </select>

    <select id="getFamily" parameterType="string" resultType="java.lang.String">
        select distinct(family)
        from animal
        where
            orders = #{order}
        and
            family is not null
    </select>

    <select id="getKindFamily" parameterType="com.beordie.model.request.AnimalKind" resultMap="baseMap">
        select class_species, subclass, orders, family, min(id) as id
        from animal
        where
            family is not null
        <if test="animal.classSpecies != null">
            and class_species = #{animal.classSpecies}
        </if>
        <if test="animal.subclass != null">
            and subclass = #{animal.subclass}
        </if>
        <if test="animal.orders != null">
            and orders = #{animal.orders}
        </if>
        GROUP BY class_species, subclass, orders, family
        limit #{offset}, #{limit}
    </select>

    <select id="getCountFamily" parameterType="com.beordie.model.request.AnimalKind" resultType="long">
        select count(*) from (
            select class_species, subclass, orders, family, min(id) as id
            from animal
            where
                family is not null
            <if test="animal.classSpecies != null">
                and class_species = #{animal.classSpecies}
            </if>
            <if test="animal.subclass != null">
                and subclass = #{animal.subclass}
            </if>
            <if test="animal.orders != null">
                and orders = #{animal.orders}
            </if>
            GROUP BY class_species, subclass, orders, family
        ) as b
    </select>

    <select id="getGenus" parameterType="string" resultType="java.lang.String">
        select distinct(genus)
        from animal
        where
            family = #{family}
        and
              genus is not null
    </select>

    <select id="getKindGenus" parameterType="com.beordie.model.request.AnimalKind" resultMap="baseMap">
        select class_species, subclass, orders, family, genus, min(id) as id
        from animal
        where
            genus is not null
        <if test="animal.classSpecies != null">
            and class_species = #{animal.classSpecies}
        </if>
        <if test="animal.subclass != null">
            and subclass = #{animal.subclass}
        </if>
        <if test="animal.orders != null">
            and orders = #{animal.orders}
        </if>
        <if test="animal.genus != null">
            and orders = #{animal.genus}
        </if>
        GROUP BY class_species, subclass, orders, family, genus
        limit #{offset}, #{limit}
    </select>

    <select id="getCountGenus" parameterType="com.beordie.model.request.AnimalKind" resultType="long">
        select count(*) from (
            select class_species, subclass, orders, family, genus, min(id) as id
            from animal
            where
                genus is not null
            <if test="animal.classSpecies != null">
                and class_species = #{animal.classSpecies}
            </if>
            <if test="animal.subclass != null">
                and subclass = #{animal.subclass}
            </if>
            <if test="animal.orders != null">
                and orders = #{animal.orders}
            </if>
            <if test="animal.genus != null">
                and orders = #{animal.genus}
            </if>
            GROUP BY class_species, subclass, orders, family, genus
        ) as b
    </select>

    <select id="getClassSpeciesOrderRanking" resultType="com.beordie.model.Data">
        select orders as name, count(*) as value
        from animal
        where
            chinese_name is not null
        group by orders
    </select>

    <select id="getOrderFamilyRanking" parameterType="string" resultType="com.beordie.model.Data">
        select family as name , count(*) as value
        from animal
        where
            chinese_name is not null
            and orders = #{order}
        group by family
    </select>

    <select id="getFamilyGenusRanking" parameterType="string" resultType="com.beordie.model.Data">
        select genus as name, count(*) as value
        from animal
        where
            chinese_name is not null
            and family = #{family}
        group by genus
    </select>

    <select id="getClassSpeciesFamilyRanking" resultType="com.beordie.model.Data">
        select family as name, count(*) as value
        from animal
        where
            chinese_name is not null
        group by family
        order by value desc
        limit 10
    </select>

    <select id="getOrderGenusRanking" resultType="com.beordie.model.Data">
        select CONCAT(a.orders, genus) as name, max_count as value from (
            select orders, MAX(number) as max_count from (
                select orders, genus, count(*) as number
                from animal
                where
                    chinese_name is not null
                group by orders, genus
            ) as temp
            GROUP BY orders) as a, (
            select number, max(genus) as genus from (
                select orders, genus, count(*) as number
                from animal
                where
                    chinese_name is not null
                group by orders, genus
            ) as c
            GROUP BY number
        ) as b
        where a.max_count = b.number
        ORDER BY value desc
    </select>
</mapper>
